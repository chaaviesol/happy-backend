{"level":"error","message":"All fields are mandatory in addUsers api","timestamp":"2025-07-05T10:58:47.943Z"}
{"level":"error","message":"An error occurred: id is not defined in inventory api","timestamp":"2025-08-29T12:42:15.214Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.inventory.findMany()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:617:47\n\n  614 try {\n  615   const division = request.body.division;\n  616   if (!division) {\n→ 617     const prodlist = await prisma.inventory.findMany(\nCan't reach database server at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`. in productsale_list api","timestamp":"2025-09-08T08:12:47.308Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.inventory.findMany()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:561:45\n\n  558 const viewaccessories = async (request, response) => {\n  559   // const usertype=request.user.userType\n  560   try {\n→ 561     const prodlist = await prisma.inventory.findMany(\nCan't reach database server at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`. in viewaccessories api","timestamp":"2025-09-08T08:12:47.326Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.users.findMany()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:532:41\n\n  529 const viewcustomers = async (request, response) => {\n  530   const usertype = \"CUS\";\n  531   try {\n→ 532     const customer = await prisma.users.findMany(\nCan't reach database server at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`. in viewcustomers api","timestamp":"2025-09-08T08:14:00.178Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.inventory.findMany()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:561:45\n\n  558 const viewaccessories = async (request, response) => {\n  559   // const usertype=request.user.userType\n  560   try {\n→ 561     const prodlist = await prisma.inventory.findMany(\nCan't reach database server at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`. in viewaccessories api","timestamp":"2025-09-08T08:14:00.180Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.inventory.aggregate()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:626:30\n\n  623 const productDataArray = await Promise.all(\n  624   prodlist.map(async (prod) => {\n  625     const [maxMrp, productTypeResult, coupon] = await Promise.all([\n→ 626       prisma.inventory.aggregate(\nCan't reach database server at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`. in productsale_list api","timestamp":"2025-09-08T08:14:02.438Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.inventory.aggregate()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:626:30\n\n  623 const productDataArray = await Promise.all(\n  624   prodlist.map(async (prod) => {\n  625     const [maxMrp, productTypeResult, coupon] = await Promise.all([\n→ 626       prisma.inventory.aggregate(\nTimed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 21) in productsale_list api","timestamp":"2025-09-08T08:14:07.714Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.inventory.findMany()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:561:45\n\n  558 const viewaccessories = async (request, response) => {\n  559   // const usertype=request.user.userType\n  560   try {\n→ 561     const prodlist = await prisma.inventory.findMany(\nCan't reach database server at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`. in viewaccessories api","timestamp":"2025-09-08T08:15:11.791Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.inventory.findMany()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:617:47\n\n  614 try {\n  615   const division = request.body.division;\n  616   if (!division) {\n→ 617     const prodlist = await prisma.inventory.findMany(\nCan't reach database server at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`. in productsale_list api","timestamp":"2025-09-08T08:15:11.794Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.users.findMany()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:532:41\n\n  529 const viewcustomers = async (request, response) => {\n  530   const usertype = \"CUS\";\n  531   try {\n→ 532     const customer = await prisma.users.findMany(\nCan't reach database server at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`. in viewcustomers api","timestamp":"2025-09-08T08:15:11.796Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.users.findMany()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:532:41\n\n  529 const viewcustomers = async (request, response) => {\n  530   const usertype = \"CUS\";\n  531   try {\n→ 532     const customer = await prisma.users.findMany(\nCan't reach database server at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`. in viewcustomers api","timestamp":"2025-09-08T08:15:11.798Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.inventory.findMany()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:617:47\n\n  614 try {\n  615   const division = request.body.division;\n  616   if (!division) {\n→ 617     const prodlist = await prisma.inventory.findMany(\nCan't reach database server at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`. in productsale_list api","timestamp":"2025-09-08T08:15:11.799Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.users.findMany()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:532:41\n\n  529 const viewcustomers = async (request, response) => {\n  530   const usertype = \"CUS\";\n  531   try {\n→ 532     const customer = await prisma.users.findMany(\nCan't reach database server at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`. in viewcustomers api","timestamp":"2025-09-08T08:15:11.800Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.inventory.aggregate()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:626:30\n\n  623 const productDataArray = await Promise.all(\n  624   prodlist.map(async (prod) => {\n  625     const [maxMrp, productTypeResult, coupon] = await Promise.all([\n→ 626       prisma.inventory.aggregate(\nCan't reach database server at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`. in productsale_list api","timestamp":"2025-09-08T08:15:14.438Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.product_master.findFirst()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:567:60\n\n  564 \n  565 for (const prod of prodlist) {\n  566   if (prod.prod_id !== null && prod.total_quantity > 0) {\n→ 567     const productDetails = await prisma.product_master.findFirst(\nTimed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 21) in viewaccessories api","timestamp":"2025-09-08T08:15:19.822Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.inventory.findMany()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:561:45\n\n  558 const viewaccessories = async (request, response) => {\n  559   // const usertype=request.user.userType\n  560   try {\n→ 561     const prodlist = await prisma.inventory.findMany(\nCan't reach database server at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`. in viewaccessories api","timestamp":"2025-09-08T08:15:49.979Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.inventory.findMany()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:617:47\n\n  614 try {\n  615   const division = request.body.division;\n  616   if (!division) {\n→ 617     const prodlist = await prisma.inventory.findMany(\nCan't reach database server at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`. in productsale_list api","timestamp":"2025-09-08T08:15:49.990Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.inventory.aggregate()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:626:30\n\n  623 const productDataArray = await Promise.all(\n  624   prodlist.map(async (prod) => {\n  625     const [maxMrp, productTypeResult, coupon] = await Promise.all([\n→ 626       prisma.inventory.aggregate(\nCan't reach database server at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`. in productsale_list api","timestamp":"2025-09-08T08:16:00.554Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.product_master.findFirst()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:567:60\n\n  564 \n  565 for (const prod of prodlist) {\n  566   if (prod.prod_id !== null && prod.total_quantity > 0) {\n→ 567     const productDetails = await prisma.product_master.findFirst(\nTimed out fetching a new connection from the connection pool. More info: http://pris.ly/d/connection-pool (Current connection pool timeout: 10, connection limit: 21) in viewaccessories api","timestamp":"2025-09-08T08:16:06.624Z"}
{"level":"error","message":"All fields are mandatory in addUsers api","timestamp":"2025-10-07T07:37:26.990Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.product_master.findFirst()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:567:60\n\n  564 \n  565 for (const prod of prodlist) {\n  566   if (prod.prod_id !== null && prod.total_quantity > 0) {\n→ 567     const productDetails = await prisma.product_master.findFirst(\nCan't reach database server at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`. in viewaccessories api","timestamp":"2025-10-07T09:39:16.361Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.inventory.aggregate()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:626:30\n\n  623 const productDataArray = await Promise.all(\n  624   prodlist.map(async (prod) => {\n  625     const [maxMrp, productTypeResult, coupon] = await Promise.all([\n→ 626       prisma.inventory.aggregate(\nCan't reach database server at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`. in productsale_list api","timestamp":"2025-10-07T09:45:44.871Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.staff_users.count()` invocation in\nD:\\Happyy\\happy-backend\\routes\\staff\\staff.controller.js:829:54\n\n  826 // attendence\n  827 const total_attendence = async (req, res) => {\n  828     try {\n→ 829         const staff_count = await prisma.staff_users.count(\nCan't reach database server at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`\n\nPlease make sure your database server is running at `chaavie-db-1.c0acpozzjmqu.ap-south-1.rds.amazonaws.com`:`5432`. in total_attendence api","timestamp":"2025-10-07T10:46:20.550Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.sales_order_new.create()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:101:62\n\n   98   };\n   99 });\n  100 \n→ 101 const sales_orderdata = await prisma.sales_order_new.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: \"ERROR\", parsed_severity: Some(Error), code: SqlState(EXX000), message: \"unsupported jsonb version number 0\", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some(\"jsonb.c\"), line: Some(123), routine: Some(\"jsonb_recv\") }) }), transient: false }) in newsaleorders api","timestamp":"2025-10-07T12:01:58.516Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.sales_order_new.create()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:101:62\n\n   98   };\n   99 });\n  100 \n→ 101 const sales_orderdata = await prisma.sales_order_new.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: \"ERROR\", parsed_severity: Some(Error), code: SqlState(EXX000), message: \"unsupported jsonb version number 0\", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some(\"jsonb.c\"), line: Some(123), routine: Some(\"jsonb_recv\") }) }), transient: false }) in newsaleorders api","timestamp":"2025-10-07T12:02:41.706Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.sales_order_new.create()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:101:62\n\n   98   };\n   99 });\n  100 \n→ 101 const sales_orderdata = await prisma.sales_order_new.create(\nError occurred during query execution:\nConnectorError(ConnectorError { user_facing_error: None, kind: QueryError(Error { kind: Db, cause: Some(DbError { severity: \"ERROR\", parsed_severity: Some(Error), code: SqlState(EXX000), message: \"unsupported jsonb version number 0\", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some(\"jsonb.c\"), line: Some(123), routine: Some(\"jsonb_recv\") }) }), transient: false }) in newsaleorders api","timestamp":"2025-10-07T12:04:35.786Z"}
{"level":"error","message":"An error occurred: \nInvalid `prisma.product_master.findMany()` invocation in\nD:\\Happyy\\happy-backend\\routes\\sales\\sales.controller.js:82:54\n\n  79   });\n  80   return;\n  81 }\n→ 82 const products = await prisma.product_master.findMany(\nTransaction API error: Transaction not found. Transaction ID is invalid, refers to an old closed transaction Prisma doesn't have information about anymore, or was obtained before disconnecting. in newsaleorders api","timestamp":"2025-10-07T12:16:00.244Z"}
